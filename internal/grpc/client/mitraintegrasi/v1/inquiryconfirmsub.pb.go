// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.0
// source: inquiryconfirmsub.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PaymentPoolId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paymentpoolid string `protobuf:"bytes,1,opt,name=paymentpoolid,proto3" json:"paymentpoolid,omitempty"`
}

func (x *PaymentPoolId) Reset() {
	*x = PaymentPoolId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inquiryconfirmsub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentPoolId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPoolId) ProtoMessage() {}

func (x *PaymentPoolId) ProtoReflect() protoreflect.Message {
	mi := &file_inquiryconfirmsub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPoolId.ProtoReflect.Descriptor instead.
func (*PaymentPoolId) Descriptor() ([]byte, []int) {
	return file_inquiryconfirmsub_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentPoolId) GetPaymentpoolid() string {
	if x != nil {
		return x.Paymentpoolid
	}
	return ""
}

type InquryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ResponseCode        string `protobuf:"bytes,2,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseDescription string `protobuf:"bytes,3,opt,name=response_description,json=responseDescription,proto3" json:"response_description,omitempty"`
	Data                *Data  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InquryResponse) Reset() {
	*x = InquryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inquiryconfirmsub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InquryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InquryResponse) ProtoMessage() {}

func (x *InquryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inquiryconfirmsub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InquryResponse.ProtoReflect.Descriptor instead.
func (*InquryResponse) Descriptor() ([]byte, []int) {
	return file_inquiryconfirmsub_proto_rawDescGZIP(), []int{1}
}

func (x *InquryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InquryResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *InquryResponse) GetResponseDescription() string {
	if x != nil {
		return x.ResponseDescription
	}
	return ""
}

func (x *InquryResponse) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paymentpoolid string `protobuf:"bytes,1,opt,name=paymentpoolid,proto3" json:"paymentpoolid,omitempty"`
	NavDate       string `protobuf:"bytes,2,opt,name=nav_date,json=navDate,proto3" json:"nav_date,omitempty"`
	Status        string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inquiryconfirmsub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_inquiryconfirmsub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_inquiryconfirmsub_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetPaymentpoolid() string {
	if x != nil {
		return x.Paymentpoolid
	}
	return ""
}

func (x *Data) GetNavDate() string {
	if x != nil {
		return x.NavDate
	}
	return ""
}

func (x *Data) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_inquiryconfirmsub_proto protoreflect.FileDescriptor

var file_inquiryconfirmsub_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x73, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x64,
	0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x71, 0x75, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x6f, 0x6f, 0x6c, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x61, 0x76, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x61, 0x76, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0x4c, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x12, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x12, 0x0e, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x49, 0x6e, 0x71,
	0x75, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inquiryconfirmsub_proto_rawDescOnce sync.Once
	file_inquiryconfirmsub_proto_rawDescData = file_inquiryconfirmsub_proto_rawDesc
)

func file_inquiryconfirmsub_proto_rawDescGZIP() []byte {
	file_inquiryconfirmsub_proto_rawDescOnce.Do(func() {
		file_inquiryconfirmsub_proto_rawDescData = protoimpl.X.CompressGZIP(file_inquiryconfirmsub_proto_rawDescData)
	})
	return file_inquiryconfirmsub_proto_rawDescData
}

var file_inquiryconfirmsub_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_inquiryconfirmsub_proto_goTypes = []interface{}{
	(*PaymentPoolId)(nil),  // 0: PaymentPoolId
	(*InquryResponse)(nil), // 1: InquryResponse
	(*Data)(nil),           // 2: Data
}
var file_inquiryconfirmsub_proto_depIdxs = []int32{
	2, // 0: InquryResponse.data:type_name -> Data
	0, // 1: SendPaymentPoolId.InquiryConfirmSubs:input_type -> PaymentPoolId
	1, // 2: SendPaymentPoolId.InquiryConfirmSubs:output_type -> InquryResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_inquiryconfirmsub_proto_init() }
func file_inquiryconfirmsub_proto_init() {
	if File_inquiryconfirmsub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inquiryconfirmsub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentPoolId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inquiryconfirmsub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InquryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inquiryconfirmsub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inquiryconfirmsub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inquiryconfirmsub_proto_goTypes,
		DependencyIndexes: file_inquiryconfirmsub_proto_depIdxs,
		MessageInfos:      file_inquiryconfirmsub_proto_msgTypes,
	}.Build()
	File_inquiryconfirmsub_proto = out.File
	file_inquiryconfirmsub_proto_rawDesc = nil
	file_inquiryconfirmsub_proto_goTypes = nil
	file_inquiryconfirmsub_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SendPaymentPoolIdClient is the client API for SendPaymentPoolId service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendPaymentPoolIdClient interface {
	InquiryConfirmSubs(ctx context.Context, in *PaymentPoolId, opts ...grpc.CallOption) (*InquryResponse, error)
}

type sendPaymentPoolIdClient struct {
	cc grpc.ClientConnInterface
}

func NewSendPaymentPoolIdClient(cc grpc.ClientConnInterface) SendPaymentPoolIdClient {
	return &sendPaymentPoolIdClient{cc}
}

func (c *sendPaymentPoolIdClient) InquiryConfirmSubs(ctx context.Context, in *PaymentPoolId, opts ...grpc.CallOption) (*InquryResponse, error) {
	out := new(InquryResponse)
	err := c.cc.Invoke(ctx, "/SendPaymentPoolId/InquiryConfirmSubs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SendPaymentPoolIdServer is the server API for SendPaymentPoolId service.
type SendPaymentPoolIdServer interface {
	InquiryConfirmSubs(context.Context, *PaymentPoolId) (*InquryResponse, error)
}

// UnimplementedSendPaymentPoolIdServer can be embedded to have forward compatible implementations.
type UnimplementedSendPaymentPoolIdServer struct {
}

func (*UnimplementedSendPaymentPoolIdServer) InquiryConfirmSubs(context.Context, *PaymentPoolId) (*InquryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InquiryConfirmSubs not implemented")
}

func RegisterSendPaymentPoolIdServer(s *grpc.Server, srv SendPaymentPoolIdServer) {
	s.RegisterService(&_SendPaymentPoolId_serviceDesc, srv)
}

func _SendPaymentPoolId_InquiryConfirmSubs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentPoolId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendPaymentPoolIdServer).InquiryConfirmSubs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SendPaymentPoolId/InquiryConfirmSubs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendPaymentPoolIdServer).InquiryConfirmSubs(ctx, req.(*PaymentPoolId))
	}
	return interceptor(ctx, in, info, handler)
}

var _SendPaymentPoolId_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SendPaymentPoolId",
	HandlerType: (*SendPaymentPoolIdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InquiryConfirmSubs",
			Handler:    _SendPaymentPoolId_InquiryConfirmSubs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inquiryconfirmsub.proto",
}
